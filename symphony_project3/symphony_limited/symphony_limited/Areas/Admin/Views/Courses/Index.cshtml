<h2 class="title-admin">Courses</h2>
@using System.Globalization
@using PagedList.Mvc
@model PagedList.IPagedList<symphony_limited.FrameWork.Course>
<div id="menuLogin" styler style="font-family: sans-serif;color: #333;">

    <ul class="list-action">

        @if (Session["Email"] != null)
        {
             <li style="margin-right:80px"><a style="color:red;margin-top:;margin-right:200px">  @Session["Email"]</a></li>
            <li>@Html.ActionLink("Logout", "Logout", "LoginRegister")</li>
            <li>@Html.ActionLink("Create New", "Create")</li>
        }
        else
        {
            <li>@Html.ActionLink("Signup", "Signup", "LoginRegister")</li>
            <li>@Html.ActionLink("Login", "Login", "LoginRegister")</li>
            <li class="create-new">@Html.ActionLink("Create New", "Create")</li>
        }
    </ul>
</div>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}




<form action="/Admin/Courses/Index" method="get">
    <input type="text" name="search" class="input-search" value="@Request["search"]">
    <button type="submit" class="search"><i class="fas fa-search"></i></button>


    <label style="margin-left:1em;">Page Size:</label>
    <select name="pageSize">
        <option value="5" @(Request["pageSize"] == "5" ? "selected" : "")>5</option>
        <option value="10" @(Request["pageSize"] == "10" ? "selected" : "")>10</option>
        <option value="15" @(Request["pageSize"] == "15" ? "selected" : "")>15</option>
        <option value="20" @(Request["pageSize"] == "20" ? "selected" : "")>20</option>
        <option value="25" @(Request["pageSize"] == "25" ? "selected" : "")>25</option>
    </select>
    <input type="hidden" name="pageNumber" value="@(String.IsNullOrEmpty(Request["pageNumber"]) ? "1" : Request["pageNumber"])" />


</form>



<script>
    document.querySelector('[name="pageSize"]').onchange = function () {
        document.querySelector('form').submit();
    }

    document.querySelector('[name="locale"]').onchange = function () {
        document.querySelector('form').submit();
    }
</script>

<table class="table">
    <tr>
        <th>
            NameCategory
        </th>
        <th>
            NameTeachear
        </th>
        <th>
            NameCourse
        </th>
        <th>
            Price
        </th>
        <th>
            Status
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Description)
            </th>*@
        <th>
            Numberofsession
        </th>
        <th>
            Img
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.NameCategory)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Teacher.NameTeachear)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NameCourse)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.Numberofsession)
        </td>
        <td><img style="width:50px;height:50px" src="~/Upload/Course/@item.Img" /></td>
        <td>
        <td class="edit">
            @Html.ActionLink("Edit", "Edit", new { id = item.CourseId })
        </td>
        <td class="detail">
            @Html.ActionLink("Details", "Details", new { id = item.CourseId })
        </td>
        <td class="delete">
            @Html.ActionLink("Delete", "Delete", new { id = item.CourseId })
        </td>
        
    </tr>
    }

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(
    Model,
    pageNumber => Url.Action(
         "Index",
         new
         {
             pageNumber,
             pageSize = Request["pageSize"],
             search = Request["search"],
             order = Request["order"],
             sort = Request["sort"]
         }
    )
)
